---
import Layout from "../layouts/Layout.astro";
---

<div class="bg-slate-300 h-screen w-screen absolute animate-slideUp z-50" id="loader"></div>
<Layout title="title">
  <main class="h-screen w-screen">
    <section id="main" class="flex flex-col gap-3 h-full w-full justify-center items-center">
      <div class="container max-w-xl h-96 bg-white rounded-2xl border-[1px] border-slate-100 flex drop-shadow-[0_10px_5px_rgba(0,0,0,0.01)] justify-start items-end px-14 py-20">
        <div class="flex flex-col gap-4">
          <p class="font-['Sora'] text-base flex gap-4 items-end">hi. <span class="text-xs opacity-20">01.Home</span></p>
          <div class="flex flex-col gap-0">
            <div class="font-['Libre_caslon_text'] text-5xl italic font-medium">I'm Yasin.</div>
            <p class="font-['Sora'] text-5xl font-semibold">I <span id="spin"></span></p>
          </div>
        </div>
      </div>
      <div class="flex justify-between container w-full h-fit max-w-xl px-1 text-zinc-200">
        <div class="text-zinc-300">
          <svg width="30" height="26" viewBox="0 0 30 26" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
              d="M20.9644 4.04296C20.0116 7.17353 18.9339 12.0814 22.2453 6.6685C22.503 6.26837 23.0184 5.22266 23.0184 4.24078C23.0184 3.2589 23.0184 7.12557 23.0184 9.18164C22.9524 7.734 23.0885 4.71913 24.1599 4.24078L26.2138 2.92801L26.443 3.24271C26.0715 5.37521 25.8992 9.61144 28.1824 9.49635C30.4655 9.38125 26.452 10.1527 24.1599 10.5529C20.2693 11.3411 12.2427 13.2036 11.2612 14.3473"
              stroke="#E4E4E7"
              stroke-width="0.8"></path>
            <path
              d="M14.3882 6.2731C14.0206 5.44214 12.9914 4.2788 11.8152 6.2731C10.345 8.76596 10.1163 12.6084 12.6893 10.1379C14.7476 8.16158 15.1517 5.95178 15.0964 5.09392H14.7019C14.161 6.71996 13.341 10.0052 14.3882 10.1379C14.6945 10.1768 15.1031 9.74027 15.5525 9.03498M15.5525 9.03498C16.6391 7.32997 17.9647 4.05414 18.6644 2.12579C18.1176 2.90145 17.3062 4.6348 18.4358 5.36293C19.8478 6.2731 17.4207 12.1869 15.5525 9.03498Z"
              stroke="#E4E4E7"
              stroke-width="0.8"></path>
            <path
              d="M2.44261 6.61631C3.30743 5.50116 5.3019 3.04186 6.36123 2.12579C5.29741 4.91889 3.53695 10.541 5.00565 10.6847C6.47435 10.8284 10.235 5.03864 11.9317 2.12579C11.5397 2.98947 10.6596 5.13264 10.2754 6.79593C9.89113 8.45922 7.82604 14.5211 6.84152 17.3442C6.00812 19.6418 3.88976 24.1895 2.08352 23.9991C0.277274 23.8087 1.13042 20.3872 1.78278 18.7003C2.84659 16.461 6.67095 11.0125 11.1955 10.6847"
              stroke="#E4E4E7"
              stroke-width="0.8"></path>
            <path d="M21.139 3.32124L21.5794 2" stroke="#E4E4E7" stroke-width="0.8"></path>
          </svg>
        </div>
        <p class="text-xs font-['Sora']">© 2024 Yasin’s Portfolio.</p>
      </div>
    </section>
  </main>
</Layout>

<!-- <script>
  //
  function createKeyframes(name, keyframes) {
    const style = document.createElement("style");
    style.innerHTML = `
  @keyframes ${name} {
      ${Object.entries(keyframes)
        .map(
          ([percent, properties]) =>
            `${percent} { ${Object.entries(properties)
              .map(([prop, value]) => `${prop}: ${value}`)
              .join("; ")} }`
        )
        .join(" ")}
  }
`;
    document.head.appendChild(style);
  }

  // Define keyframes
  const keyframes = {
    "text-slide-2": {
      "0%, 40%": { transform: "translateY(0%)" },
      "50%, 90%": { transform: "translateY(-33.33%)" },
      "100%": { transform: "translateY(-66.66%)" },
    },
    "text-slide-3": {
      "0%, 26.66%": { transform: "translateY(0%)" },
      "33.33%, 60%": { transform: "translateY(-25%)" },
      "66.66%, 93.33%": { transform: "translateY(-50%)" },
      "100%": { transform: "translateY(-75%)" },
    },
    "text-slide-4": {
      "0%, 20%": { transform: "translateY(0%)" },
      "25%, 45%": { transform: "translateY(-20%)" },
      "50%, 70%": { transform: "translateY(-40%)" },
      "75%, 95%": { transform: "translateY(-60%)" },
      "100%": { transform: "translateY(-80%)" },
    },
    "text-slide-5": {
      "0%, 16%": { transform: "translateY(0%)" },
      "20%, 36%": { transform: "translateY(-16.66%)" },
      "40%, 56%": { transform: "translateY(-33.33%)" },
      "60%, 76%": { transform: "translateY(-50%)" },
      "80%, 96%": { transform: "translateY(-66.66%)" },
      "100%": { transform: "translateY(-83.33%)" },
    },
    "text-slide-6": {
      "0%, 13.33%": { transform: "translateY(0%)" },
      "16.66%, 30%": { transform: "translateY(-14.28%)" },
      "33.33%, 46.66%": { transform: "translateY(-28.57%)" },
      "50%, 63.33%": { transform: "translateY(-42.85%)" },
      "66.66%, 80%": { transform: "translateY(-57.14%)" },
      "83.33%, 96.66%": { transform: "translateY(-71.42%)" },
      "100%": { transform: "translateY(-85.71%)" },
    },
    "text-slide-7": {
      "0%, 11.43%": { transform: "translateY(0%)" },
      "14.28%, 25.71%": { transform: "translateY(-12.5%)" },
      "28.57%, 40%": { transform: "translateY(-25%)" },
      "42.85%, 54.28%": { transform: "translateY(-37.5%)" },
      "57.14%, 68.57%": { transform: "translateY(-50%)" },
      "71.42%, 82.85%": { transform: "translateY(-62.5%)" },
      "85.71%, 97.14%": { transform: "translateY(-75%)" },
      "100%": { transform: "translateY(-87.5%)" },
    },
    "text-slide-8": {
      "0%, 10%": { transform: "translateY(0%)" },
      "12.5%, 22.5%": { transform: "translateY(-11.11%)" },
      "25%, 35%": { transform: "translateY(-22.22%)" },
      "37.5%, 47.5%": { transform: "translateY(-33.33%)" },
      "50%, 60%": { transform: "translateY(-44.44%)" },
      "62.5%, 72.5%": { transform: "translateY(-55.55%)" },
      "75%, 85%": { transform: "translateY(-66.66%)" },
      "87.5%, 97.5%": { transform: "translateY(-77.77%)" },
      "100%": { transform: "translateY(-88.88%)" },
    },
  };

  // Create keyframes
  for (const [name, frames] of Object.entries(keyframes)) {
    createKeyframes(name, frames);
  }

  function applyAnimation(element, name, duration, timingFunction, iterationCount) {
    element.style.animation = `${name} ${duration} ${timingFunction} ${iterationCount}`;
  }

  // Example usage:
  // Apply 'text-slide-2' animation to an element with id 'animated-text'
  const element = document.getElementById("animated-text");
  applyAnimation(element, "text-slide-2", "5s", "cubic-bezier(0.83, 0, 0.17, 1)", "infinite");

  //
</script> -->
